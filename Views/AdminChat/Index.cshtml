@{
    Layout = "_Layoutadmin";
}
<div class="d-flex" style="height: 88vh; margin: 0;">
    <!-- Sidebar -->
    <div id="contact-list" class="p-3 border-radius: 50px 0 0 10px;"
         style="width: 250px; min-width: 250px; max-width: 250px;
            overflow-y: auto;
            background: #1e1f2f;
            color: white;
            border-top-left-radius: 10px;
            border-bottom-left-radius: 10px;">
        <h5>Quản lý tin nhắn</h5>
        <ul id="contacts" style="list-style: none; padding-left: 0;"></ul>
    </div>

    <!-- Chat box (FULL HEIGHT, NO ROUNDED CORNER) -->
    <div class="flex-grow-1 p-3 d-flex flex-column bg-white" style="border-radius: 0;">
        <div id="chat-messages"
             style="flex: 1; overflow-y: auto; background: #f8f9fa; padding: 10px; border-radius: 0;">
            <div class="text-muted text-center mt-5" id="chat-placeholder">Chọn một người để bắt đầu trò chuyện</div>
        </div>

        <div class="d-flex mt-2 d-none" id="chat-input-area">
            <input id="chat-input" class="form-control me-2" placeholder="Nhập tin nhắn..." />
            <button class="btn btn-primary" onclick="sendMessage()">Gửi</button>
        </div>
    </div>
</div>



@section Scripts {
    <script>
        let selectedMaLh = 0;

        async function loadContacts() {
            const res = await fetch('/admin/chat/contacts');
            const data = await res.json();

            const ul = document.getElementById('contacts');
            ul.innerHTML = '';

            data.forEach(contact => {
                const li = document.createElement('li');
                li.innerHTML = `
                    <button onclick="selectChat(${contact.maLh})"
                            class="btn w-100 text-start text-white">
                        ${contact.tenKhach}
                    </button>`;
                ul.appendChild(li);
            });
        }


        async function selectChat(maLh) {
            selectedMaLh = maLh;

            const inputArea = document.getElementById("chat-input-area");
            if (inputArea) inputArea.classList.remove("d-none");

            const placeholder = document.getElementById("chat-placeholder");
            const chat = document.getElementById('chat-messages');

          
            if (placeholder) placeholder.style.display = "none";
            if (inputArea) inputArea.style.display = "flex";

            const res = await fetch(`/admin/chat/history/${maLh}`);
            const data = await res.json();
            chat.innerHTML = '';

            data.forEach(m => {
                const isAdmin = m.nguoiGui === 'nhanvien';
                const alignment = isAdmin ? 'text-end' : 'text-start';
                const label = isAdmin ? 'Admin' : 'Khách';
                const bubbleColor = isAdmin ? '#d6eaff' : '#f0f0f0';

                const time = new Date(m.thoiGianGui).toLocaleString('vi-VN', {
                    hour: '2-digit',
                    minute: '2-digit',
                    day: '2-digit',
                    month: '2-digit',
                    year: 'numeric'
                });

                const msgDiv = document.createElement('div');
                msgDiv.className = `${alignment} my-2`;

                msgDiv.innerHTML = `
                    <div style="
                        display: inline-block;
                        background: ${bubbleColor};
                        padding: 10px 14px;
                        border-radius: 16px;
                        max-width: 70%;
                        font-size: 14px;
                        text-align: left;">
                        <b>${label}:</b> ${m.noiDung}<br>
                        <small style="color: gray; font-size: 12px;">🕒 ${time}</small>
                    </div>`;

                chat.appendChild(msgDiv);
            });

            chat.scrollTop = chat.scrollHeight;
        }






        async function sendMessage() {
            const input = document.getElementById('chat-input');
            const content = input.value.trim();
            if (!content || !selectedMaLh) return;
            await fetch('/admin/chat/send', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ maLh: selectedMaLh, noiDung: content })
            });
            input.value = '';
            await selectChat(selectedMaLh);
        }

        loadContacts();
    </script>
}
